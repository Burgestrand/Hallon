Hallon’s Changelog
==================

NEXT
------------------
[ Added ]
- Add example for listing track information in playlists
- Updated to (lib)Spotify v9
- Full Track subsystem support
- Full Album subsystem support
- Full AlbumBrowse subsystem support
- Full Artist subsystem support
- Full ArtistBrowse subsystem support
- Full Toplist subsystem support
- Full Search subsystem support
- Allow setting Session connection type/rules
- Session offline query methods (offline_time_left et al)
- Work-in-progress Player
- Add Session relogin support
- Add Enumerator
- Use libmockspotify for testing (spec/mockspotify)
- Add Hallon::Base class
- Add optional parameter to have Image#id return raw id
- Allow Image.new to accept an image id
- Add Hallon::API_BUILD

[ Fixed ]
- Improve speed of Session#wait_for for already-loaded cases
- Error.maybe_raise no longer errors out on timeout
- from_link now checks for null pointers
- No longer uses autotest as development dependency
- Cleaned up specs to use same mocks everywhere
- Make Hallon::URI match image URIs

[ Broke ]
- Ignore Ruby v1.8.x compatibility


v0.3.0
------------------
- Don’t use bundler for :spec and :test rake tasks
- Add Error.table
- Add Track subsystem
- Fix spec:cov and spotify:coverage rake tasks

v0.2.1
------------------
- Fix compatibility with v1.8

v0.2.0
------------------
- Alias Session#process_events_on to Session#wait_until
- Have Error.maybe_raise return error code
- Use mockspotify gem (https://rubygems.org/gems/mockspotify) for testing

v0.1.1
------------------
Don’t show the README in the gem description.

v0.1.0
------------------
Initial, first, release! This version is merely made to
have a starting point, a point of reference, for future
releases soon to come.

- Error subsystem is covered (`sp_error_message(error_code)`)
- Image subsystem is complete, however you can only create images
  from links at this moment.
- Session API is partial. Currently you can login, logout, retrieve
  the logged in user and query user relations.
- User API is complete, but you can only create users from your
  currently logged in user (through Session) or from links.

The API is still very young, and I expect a lot of changes to
happen to it, to make the asynchronous nature of libspotify
easier to handle.
